#include "DeqOutList.h"
#include "DeqOutVector.h"
#include <iostream>
#include <conio.h>
#include <time.h>
#include <limits>
#include <iomanip>
#include <locale>

using namespace std;

int main(void)
{
    setlocale(LC_ALL, "Rus");
    BaseDeqOut *Deq;
    srand(time(0)); // подключаем рандом
    char c;
    int i, k, n, l, x;
    // просим пользователя выбрать структуру хранения
    cout << "Выберите структру хранения для дека" << endl
         << "1. Векторная структура хранения" << endl
         << "2. Связная структура хранения" << endl;
    do
    {
        cin >> i;
        if (i < 1 || i > 2) // если введено что-то некоректное
        {
            cout << "Введите корректное число, 1 или 2" << endl;
            cin.clear(); // очищаем поле
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
        }
    } while (i != 1 && i != 2);
    if (i == 1) // если векторная
        Deq = new DeqOutVector(15);
    if (i == 2) // если связная
        Deq = new DeqOutList();
    system("cls");
    while (1)
    {
        n = rand() % 5; // генерируем случайное количество сообщения
        if (n == 0)
        {
            cout << "Сообщения не были получены" << endl;
        }
        for (i = 0; i < n; i++) // генерируем случайные сообщения
        {
            k = -5 + rand() % 20;
            if (k >= 0) // сообщение от пользователя если больше или равно нулю
            {
                cout << "------------------------------------" << endl;
                cout << "|Сообщение получено от пользователя|" << endl;
                cout << "------------------------------------" << endl;
                cout << "|Содержимое сообщения: " << setw(12) << left << k << "|" << endl;
                cout << "------------------------------------" << endl;
                Deq->addBack(k); // добавляем запись в конец с которого нет извлечения
            }
            if (k < 0) // если меньше нуля, то получено от программы
            {
                cout << "---------------------------------" << endl;
                cout << "|Сообщение получено от программы|" << endl;
                cout << "---------------------------------" << endl;
                cout << "|Содержимое сообщения: " << setw(9) << left << k << "|" << endl
                     << "---------------------------------" << endl
                     << endl;
                Deq->addFront(k); // добавляем в открытый конец дека
            }
        }
        l = Deq->outHead();
        if (l < 0 && l > -100) // если сообщение меньше нуля то это от программы b дек не пуст
        {
            cout << endl
                 << "Сообщение от программы передано обрабатывающей программе" << endl;
            cout << "Содержимое сообщения: " << l << endl
                 << endl;
        }
        if (l >= 0) // иначе сообщение от пользователя передано обрабатывающей программе
        {
            cout << endl
                 << "Сообщение от пользователя передано обрабатывающей программе" << endl;
            cout << "Содержимое сообщения: " << l << endl
                 << endl;
        }
        if (l == -100) // если дек пуст l будет =-100
            cout << endl
                 << "Дек пуст" << endl;
        // спрашиваем пользователя не хочет ли он закончить
        cout << "Для выхода нажмите escape" << endl;
        cout << "Для продолжений нажмите любую кнопку" << endl
             << endl;
        c = getch();
        if (c == 27)
        {
            break;
        }
    }
    delete Deq;
    return 0;
}